?col.lab
?par
install.packages("RSelenium")
install.packages("plotly")
install.packages("ggpplot2")
library("utils", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("translations", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("tools", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("tcltk", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("survival", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("stats4", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("stats", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("splines", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("spatial", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("parallel", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("rpart", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("grDevices", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("grid", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("KernSmooth", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("lattice", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("MASS", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("Matrix", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("methods", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("mgcv", lib.loc="C:/Program Files/R/R-3.5.0/library")
detach("package:nlme", unload=TRUE)
library("nnet", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("nlme", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("graphics", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("foreign", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("datasets", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("compiler", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("codetools", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("cluster", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("class", lib.loc="C:/Program Files/R/R-3.5.0/library")
library("boot", lib.loc="C:/Program Files/R/R-3.5.0/library")
rm(list =ls())
gc()
library("gridExtra")
library(ggplot2)
install.packages("MESS")
install.packages("geepack")
install.packages("geeM")
install.packages("Matrix")
require(MESS)
require(sfsmisc)
library(ggplot2)
rm(list =ls())
gc()
library("gridExtra")
library(ggplot2)
library(plotly)
setwd("C:/Users/pg2015/Desktop/rats/paranode_animal")
data=read.table("Summary_data2.txt")
rm(list =ls())
gc()
library("gridExtra")
library(ggplot2)
library(plotly)
setwd("C:/Users/pg2015/Desktop/rats/paranode_animal")
data=read.table("Summary_data2.txt")
rm(list =ls())
gc()
library("gridExtra")
library(ggplot2)
library(plotly)
setwd("C:/Users/pg2015/Desktop/rats/rat_code/measurements")
data=read.table("Summary_data2.txt")
average_paranodal_length=data$V2
number_microglia=data$V3
number_astrocytes=data$V5
overlapping =c(0.1,	0.098,	0.128,	0.099,	0.061,	0.11,	0.06,	0.05,	0.07,	0.06,	0.06)
Rat=c("LT-IFN","LT-IFN", "LT-IFN", "LT-IFN","LT-IFN", "GFP","GFP","GFP","Control","Control", "Control")
plot_data=data.frame("average_paranodal_length"=average_paranodal_length,"microglia"=number_microglia,
"astrocytes"=number_astrocytes, "overlapping"=overlapping, "Rat"=Rat
)
p<-ggplot(data=plot_data,aes(x=microglia, y=astrocytes))+
geom_point(aes(size=average_paranodal_length, color=Rat), alpha=0.5)+
scale_size(range = c(5, 20))+
theme_bw()+xlab("Number of microglia (#)")+ylab("Number of astrocytes(#)")+
guides(size=guide_legend("Paranodal Length (µm)"))+
guides(color=guide_legend("Rat Model"))+
guides(colour = guide_legend(override.aes = list(size=8)))+
scale_color_manual(values=c("gray54", "sandybrown", "cornflowerblue") )+
scale_fill_manual(values = alpha(c("gray54", "sandybrown", "cornflowerblue")))+
theme(text = element_text(size=20))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(panel.border = element_blank())+
theme(axis.text =element_text(color="black",size=24))+
theme(axis.line=element_line(color="black",size=2,linetype="solid"),plot.title = element_text(hjust = 0.5))
print(p)
p<-ggplot(data=plot_data,aes(x=microglia, y=astrocytes))+
geom_point(aes(size=average_paranodal_length, color=Rat))+
scale_size(range = c(5, 20))+
theme_bw()+xlab("Number of microglia (#)")+ylab("Number of astrocytes(#)")+
guides(size=guide_legend("Paranodal Length (µm)"))+
guides(color=guide_legend("Rat Model"))+
guides(colour = guide_legend(override.aes = list(size=8)))+
scale_color_manual(values=c("gray54", "sandybrown", "cornflowerblue") )+
scale_fill_manual(values = alpha(c("gray54", "sandybrown", "cornflowerblue")))+
theme(text = element_text(size=20))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(panel.border = element_blank())+
theme(axis.text =element_text(color="black",size=24))+
theme(axis.line=element_line(color="black",size=2,linetype="solid"),plot.title = element_text(hjust = 0.5))
print(p)
p<-ggplot(data=plot_data,aes(x=microglia, y=astrocytes))+
geom_point(aes(size=average_paranodal_length, color=Rat), alpha=0.5)+
scale_size(range = c(5, 20))+
theme_bw()+xlab("Number of microglia (#)")+ylab("Number of astrocytes(#)")+
guides(size=guide_legend("Paranodal Length (µm)"))+
guides(color=guide_legend("Rat Model"))+
guides(colour = guide_legend(override.aes = list(size=8)))+
scale_color_manual(values=c("gray54", "sandybrown", "cornflowerblue") )+
scale_fill_manual(values = alpha(c("gray54", "sandybrown", "cornflowerblue")))+
theme(text = element_text(size=20))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(panel.border = element_blank())+
theme(axis.text =element_text(color="black",size=24))+
theme(axis.line=element_line(color="black",size=2,linetype="solid"),plot.title = element_text(hjust = 0.5))
print(p)
ggplot(data=plot_data,aes(x=microglia, y=astrocytes))+
geom_point(aes(size=overlapping, color=Rat), alpha=0.5)+
scale_size(range = c(5, 20))+
theme_bw()+xlab("Number of microglia (#)")+ylab("Number of astrocytes(#)")+
theme(axis.text=element_text(size=24),title=element_text(size=24))+
theme(axis.line=element_line(color="black",size=1,linetype="solid"),plot.title = element_text(hjust = 0.5))+
guides(size=guide_legend("% overlap regions "))+
guides(color=guide_legend("Rat Model"))+
guides(colour = guide_legend(override.aes = list(size=10)))+
scale_color_manual(values=c("gray54", "sandybrown", "cornflowerblue"))+
scale_fill_manual(values = alpha(c("gray54", "sandybrown", "cornflowerblue")))+
theme(text = element_text(size=20))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(panel.border = element_blank())+
theme(axis.text =element_text(color="black",size=24))+
theme(axis.line=element_line(color="black",size=2,linetype="solid"),plot.title = element_text(hjust = 0.5))
plot_ly(plot_data, x = ~number_microglia, y = ~number_astrocytes, z = ~average_paranodal_length) %>%
add_markers(color = ~average_paranodal_length)
setwd("C:/Users/pg2015/Desktop/cultures/treatment/glutamate_results")
max_length=117
data1=read.table("25uM_2h.txt", header=T)
data2=read.table("50uM_2h.txt", header=T)
data3=read.table("25uM_6h.txt", header=T)
data4=read.table("100uM_6h.txt", header=T)
mydata_25uM_2h<-c(data1$Length)
mydata_25uM_2h = c(mydata_25uM_2h, rep(NA,1000))
mydata_25uM_2h= mydata_25uM_2h [1:max_length]
mydata_50uM_2h<-c(data2$Length)
mydata_50uM_2h = c(mydata_50uM_2h, rep(NA,1000))
mydata_50uM_2h= mydata_50uM_2h[1:max_length]
mydata_25uM_6h<-c(data3$Length)
mydata_25uM_6h = c(mydata_25uM_6h, rep(NA,1000))
mydata_25uM_6h= mydata_25uM_6h[1:max_length]
mydata_100uM_6h<-c(data4$Length)
mydata_100uM_6h = c(mydata_100uM_6h, rep(NA,1000))
mydata_100uM_6h= mydata_100uM_6h[1:max_length]
total_lengths=cbind(mydata_25uM_2h,mydata_50uM_2h,mydata_25uM_6h,mydata_100uM_6h)
total_lengths = as.data.frame(total_lengths)
#ggplot2, we need to convert the data to a data frame.
tot=c(total_lengths[,1],total_lengths[,2],total_lengths[,3],total_lengths[,4])
type=c(rep("25uM",nrow(total_lengths)),rep("50uM",nrow(total_lengths)),
rep("25uM",nrow(total_lengths)),rep("100uM",nrow(total_lengths)))
type2=c(rep("2h",nrow(total_lengths)),rep("2h",nrow(total_lengths)),
rep("6h",nrow(total_lengths)),rep("6h",nrow(total_lengths)))
dat=data.frame("Concentration"=type,"Time"=type2, "Length"=tot)
dat = dat[!is.na(dat$Length),]
p<-ggplot(dat,aes(x=Concentration,y=Length))+
geom_boxplot(aes(fill=Time), alpha=0.5,notch=TRUE)+
theme_bw()+theme(text = element_text(size=20))+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
theme(panel.border = element_blank())+
theme(axis.text =element_text(color="black",size=20))+
theme(axis.line=element_line(color="black",size=2,linetype="solid"),plot.title = element_text(hjust = 0.5))
print(p)
rm(list =ls())
gc()
overall.wd="C:/Users/pg2015/Desktop/Measurements/caspr-measurements"
setwd(overall.wd)
max_length=200
library(ggplot2)
library(stats)
library(graphics)
library(plotly)
library(utf8)
library(rjson)
